
CREATE TABLE benutzer (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    benutzername VARCHAR(30) NOT NULL,
    passwort VARCHAR(255) NOT NULL
);



CREATE TABLE lieder (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255),
    autor VARCHAR(255),
    ton VARCHAR(255),
    pdf_attachment BLOB,
    hinzugefuegt_am DATETIME,
    PRIMARY KEY (id)
);

//. UPDATE 02.06 Liedertabelle erweitern mit Datum:
ALTER TABLE lieder
ADD hinzugefuegt_am DATETIME;


// Update 08.06 Neue Reihe
ALTER TABLE lieder
ADD COLUMN benutzer_id INT(6) UNSIGNED;

// Table Join / Verbindung herstellen Benutzer->Lieder
ALTER TABLE lieder
ADD CONSTRAINT fk_benutzer
FOREIGN KEY (benutzer_id) REFERENCES benutzer(id);

ALTER TABLE lieder
ADD INDEX idx_lieder_id (id);

CREATE TABLE abspielungen (
  id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  lieder_id INT(11),
  gesamt_abspielungen INT(6),
  FOREIGN KEY (lieder_id) REFERENCES lieder(id)
);

CREATE TABLE lieder_datum (
    id INT AUTO_INCREMENT PRIMARY KEY,
    lied_id INT,
    datum DATE,
    FOREIGN KEY (lied_id) REFERENCES lieder(id)
);

// Damit das LÃ¶schen durch die has_many beziehung auch funktionier..

ALTER TABLE lieder_datum
DROP FOREIGN KEY lieder_datum_ibfk_1;

ALTER TABLE lieder_datum
ADD CONSTRAINT lieder_datum_ibfk_1
FOREIGN KEY (lied_id) REFERENCES lieder(id)
ON DELETE CASCADE;


ALTER TABLE lieder ADD tags VARCHAR(255);